image:
    repository: nextcloud
    flavor: apache
    # default is generated by flavor and appVersion
    tag: null
    pullPolicy: IfNotPresent
    # pullSecrets:
    #   - myRegistrKeySecretName
nameOverride: ""
fullnameOverride: ""
podAnnotations: {}
deploymentAnnotations: {}
deploymentLabels: {}
# Number of replicas to be deployed
replicaCount: 1
ingress:
    enabled: false
service:
    type: NodePort
    port: 8080
    targetPort: 80
    nodePort: 30080
lifecycle: {}
# postStartCommand: []
# preStopCommand: []
phpClientHttpsFix:
    enabled: false
    protocol: https
volumePermissions:
    enabled: true
    securityContext:
        runAsUser: 0
        runAsGroup: 33
podSecurityContext:
    runAsUser: 33
    runAsGroup: 33
    fsGroup: 33
    runAsNonRoot: true
nextcloud:
    host: ENC[AES256_GCM,data:OhHqGGo8AsOCj5kK,iv:eejYg7D/z78e2OyepWycw67+1vQHs+sMv/4VoGtV2HY=,tag:iwlJl6vxkB2zjMecvTXc7A==,type:str]
    username: ricky
    password: ENC[AES256_GCM,data:Y6B2XMi5TDfH7zS2dkXF,iv:cl4z/zFhXqTEb22fLmp+abDTsiXXvpKy7DhHbWiuoiY=,tag:43k+4UK83K09RE7r1VUiDA==,type:str]
    existingSecret:
        enabled: false
    update: 0
    containerPort: 80
    persistence:
        enabled: true
        existingClaim: nextcloud-data
        accessMode: ReadWriteOnce
        size: 100Gi
    trustedDomains:
        - ENC[AES256_GCM,data:jE2C8o68nGmHKmbz,iv:PTa3rlxd9j5shrOrn7Hd9M4t0L6eGQUOV67J92pIq04=,tag:DeS4TazPRFl3LodDgpG1tw==,type:str]
        - ENC[AES256_GCM,data:TCQqqPEaddRxXUF3AA==,iv:FNN+BWwdMNolAfS1lRAVWB7NGdDLfVdZxZRkuU+k6TI=,tag:YIN5thxyrOyy8/9plEQfnw==,type:str]
    ## SMTP configuration
    mail:
        enabled: true
        fromAddress: nextcloud
        domain: mycloudzen.lol
        smtp:
            host: ENC[AES256_GCM,data:antLnzlLDTahqjhbCw+YtsWx8EkaH2Nd9++W5ubd9d40aQ==,iv:HrBcPx2DafxbRo7crJ6j7y4qbJWMv++z9EagwK8a370=,tag:SaqHUYCe899p7dc5i5BA1Q==,type:str]
            secure: ssl
            port: 465
            authtype: LOGIN
            name: ENC[AES256_GCM,data:ZiB3dJfWnCES47YGfpibP2XI77E=,iv:XAykwRJvDbN1w7FL0bw/kc35D4HMOSeSVPip/87qtb8=,tag:hDKEJ56g22VQuGCadVBYHw==,type:str]
            password: ENC[AES256_GCM,data:4g8h23jg4VgzQAWegnBUcuvuPHrIw5F6Qq1OkFzms8Mcqe9fCxLDtsiEH+g=,iv:sqH1rH5k1rqC6CkNrzLO8s2V9yyAovwIiG5OCJjy+kI=,tag:NAjGafGPHDd3As/6V1U7gw==,type:str]
        swift:
            enabled: false
    # Hooks for auto configuration
    # Here you could write small scripts which are placed in `/docker-entrypoint-hooks.d/<hook-name>/helm.sh`
    # ref: https://github.com/nextcloud/docker?tab=readme-ov-file#auto-configuration-via-hook-folders
    hooks:
        pre-installation: null
        post-installation: null
        pre-upgrade: null
        post-upgrade: null
        before-starting: null
    ## Strategy used to replace old pods
    ## IMPORTANT: use with care, it is suggested to leave as that for upgrade purposes
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    strategy:
        type: Recreate
    datadir: /var/www/html/data
persistence:
    enabled: true
    existingClaim: nextcloud-data
internalDatabase:
    enabled: false
##
## External database configuration
##
externalDatabase:
    enabled: true
    type: postgresql
    ## Database host. You can optionally include a colon delimited port like "myhost:1234"
    host: ENC[AES256_GCM,data:KB+fkkwa9JYQtCMarb+ZavYeH1Q=,iv:0jZSaq2dL54wdZSlheWOlEe2tvrlYiF8gUTFQiBA6pU=,tag:WaulB85ccmufx7QtagXRVw==,type:str]
    user: admin
    password: ENC[AES256_GCM,data:lZeDay5Pork5MZdG0IIj,iv:M4UFpfmLHUEf7cdG5sudLSzYMKhgwTMejDAm1KztNsU=,tag:lcLaSkQPnHJigsgmDvIwXA==,type:str]
    database: nextcloud
    existingSecret:
        enabled: false
##
## PostgreSQL chart configuration
## for more options see https://github.com/bitnami/charts/tree/main/bitnami/postgresql
##
postgresql:
    enabled: true
    global:
        postgresql:
            # global.postgresql.auth overrides postgresql.auth
            auth:
                username: admin
                password: ENC[AES256_GCM,data:ih3PV8L/I3JCYhA6aVgg,iv:tjAYK/tokbyKAmdIKl+H14dkOTl8SbjnonjOQMslWgU=,tag:CMVSAENB6EWeMKQSvtRUHA==,type:str]
                database: nextcloud
                # Name of existing secret to use for PostgreSQL credentials.
                # auth.postgresPassword, auth.password, and auth.replicationPassword will be ignored and picked up from this secret.
                # secret might also contains the key ldap-password if LDAP is enabled.
                # ldap.bind_password will be ignored and picked from this secret in this case.
                existingSecret: ""
                # Names of keys in existing secret to use for PostgreSQL credentials
                secretKeys:
                    adminPasswordKey: ""
                    userPasswordKey: ""
                    replicationPasswordKey: ""
    primary:
        persistence:
            enabled: true
            existingClaim: postgres-nextcloud-pvc
        podSecurityContext:
            fsGroup: 1001
## Cronjob to execute Nextcloud background tasks
## ref: https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/background_jobs_configuration.html#cron
##
cronjob:
    enabled: false
    ## Cronjob sidecar resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}
    # Allow configuration of lifecycle hooks
    # ref: https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/
    lifecycle: {}
    # postStartCommand: []
    # preStopCommand: []
    # Set securityContext parameters. For example, you may need to define runAsNonRoot directive
    securityContext: {}
    #   runAsUser: 33
    #   runAsGroup: 33
    #   runAsNonRoot: true
    #   readOnlyRootFilesystem: true
    # The command the cronjob container executes.
    command:
        - /cron.sh
## Liveness and readiness probe values
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
livenessProbe:
    enabled: true
    initialDelaySeconds: 240
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
readinessProbe:
    enabled: true
    initialDelaySeconds: 240
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
startupProbe:
    enabled: false
    initialDelaySeconds: 240
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30
    successThreshold: 1
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1h5cpazy9s7j7cmzpxjw4sxst9nk4y0lfyk62l2m4tluvkg5dk9yqw4xalx
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBoMklqRVZ5SXFzMXJHMXhk
            UjRtbDh6S2FoazFwc24vaWx2RkpBU0NVdUFrCmpKYTc0TEdMa2tTaFhlVnk1b2c0
            ZXU2Z1FIMWEzTVJXSHYxRTJIdTZIdkUKLS0tIHhqcVVGM1ZzUFREeWt2dlNuK3ha
            WVFoNTR1ZnliMjBJT1NJNkdmMXVBUkkKZD8evbConk4YA0IcwyV7AtC9Epevi0ak
            fQNcLFPhE4JQsVnWpqHkMZJsn2zVIY4UEb/hfsiG1xX3rm6d+D2ogg==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-07-10T17:24:45Z"
    mac: ENC[AES256_GCM,data:SJPycJxqpvesQst141QSWXpYO6qFtiLHHPQlKCqlICpgFdht+ZzHV7LqvrOVxKF1iFhQE6+xVrVC13yF+a9Ti7tSJDLQB6Ti85WN23XtxLTkkYDbLbXXMSDwNKcOPDXp0guLinJybaAKo4fVN/aixvBxFJ7in6MmNj9pyRf96ZQ=,iv:U7QdA4h0OBpwgmwfiFUwBvJoyHV+NljqRYVpkm54epI=,tag:sYgCiDoZw2TAd0kMdysosw==,type:str]
    pgp: []
    encrypted_regex: ^(password|secret|token|key|trustedDomains|name|host|accessKey|secretKey)$
    version: 3.8.1
