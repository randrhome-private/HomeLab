image:
    repository: nextcloud
    flavor: apache
    # default is generated by flavor and appVersion
    tag: null
    pullPolicy: IfNotPresent
    # pullSecrets:
    #   - myRegistrKeySecretName
nameOverride: ""
fullnameOverride: ""
podAnnotations: {}
deploymentAnnotations: {}
deploymentLabels: {}
# Number of replicas to be deployed
replicaCount: 1
ingress:
    enabled: false
service:
    type: NodePort
    port: 8080
    targetPort: 80
    nodePort: 30080
lifecycle: {}
# postStartCommand: []
# preStopCommand: []
phpClientHttpsFix:
    enabled: false
    protocol: https
volumePermissions:
    enabled: true
    securityContext:
        runAsUser: 0
        runAsGroup: 33
podSecurityContext:
    runAsUser: 33
    runAsGroup: 33
    fsGroup: 33
    runAsNonRoot: true
nextcloud:
    host: ENC[AES256_GCM,data:yKZpYNdhYzFgqeXN,iv:b+snIhGyfXPMNkv7d0peIZXBbKoZQPjGGv8dZMpx/Wk=,tag:XDcT8QeVn2o1fbjG7r0GHQ==,type:str]
    username: ricky
    password: ENC[AES256_GCM,data:44Vt7A43o+mtWTED8SGb,iv:ISK+TSP7ZwreZ3HRpLeRbg0nVQjuwHjnpGd+h2gUsZQ=,tag:2BRXnp9a9vdKEPLR8qd9hg==,type:str]
    existingSecret:
        enabled: false
    update: 0
    containerPort: 80
    persistence:
        enabled: true
        existingClaim: nextcloud-data
        accessMode: ReadWriteOnce
        size: 100Gi
    trustedDomains:
        - ENC[AES256_GCM,data:wAfydsfOAaMtc/KC,iv:ziBllllEsnCDvC7HwgUjOswcMMzPmL0ID1aGJNhvYXA=,tag:SLM+wfon+48dYLDZcGU+hg==,type:str]
        - ENC[AES256_GCM,data:TTFu9tykZpE6Y1xojA==,iv:acewbMkV5s9QYwt3swYv7YlTg5eUAEovLRc26ez3Ngo=,tag:EqdNyBj1+x/b1FP5/CmHcA==,type:str]
    ## SMTP configuration
    mail:
        enabled: true
        fromAddress: nextcloud
        domain: ENC[AES256_GCM,data:nJJABnqHEgCAGcWDnt0=,iv:wl7tNuq4SNUhbP2wXY7UnBp/IGSrCpUTOjTGuc1sRRc=,tag:U7rB7NuEh0AIntozgU8ZJg==,type:str]
        smtp:
            host: ENC[AES256_GCM,data:Syr6ovkU//GqOEP2/U4a5SXNI7hsKQdVsRfHaAxfw18DJw==,iv:2ZkRr14d7FsXSsh/IOqX9d2vqjT1zJo4/3LUvj0oOuo=,tag:WZCDKd4FEjUVAxvSJoztKQ==,type:str]
            secure: ssl
            port: 465
            authtype: LOGIN
            name: ENC[AES256_GCM,data:dXx3UmDnfRGKjBBUmSMOGsQUlD0=,iv:ueIj9zQS2o8psT5SgLiVtX1JURXVSU7OewwXyXa+VyE=,tag:UYmbTcG1l6DgUF0zuzWETw==,type:str]
            password: ENC[AES256_GCM,data:80SZAOJCJLq+75PGXNeMbAwKPPSHnzqsRWdIqn9XEBAR04Dq+yc/hQdpQEg=,iv:ee05GIPPqI9XC1My3WBxQr0WDi8zUlrbnKNhImUzSww=,tag:iv/TcZmMKd0hT+HzJN/v5w==,type:str]
        swift:
            enabled: false
    # Hooks for auto configuration
    # Here you could write small scripts which are placed in `/docker-entrypoint-hooks.d/<hook-name>/helm.sh`
    # ref: https://github.com/nextcloud/docker?tab=readme-ov-file#auto-configuration-via-hook-folders
    hooks:
        pre-installation: null
        post-installation: null
        pre-upgrade: null
        post-upgrade: null
        before-starting: null
    ## Strategy used to replace old pods
    ## IMPORTANT: use with care, it is suggested to leave as that for upgrade purposes
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    strategy:
        type: Recreate
    datadir: /var/www/html/data
persistence:
    enabled: true
    existingClaim: nextcloud-data
internalDatabase:
    enabled: false
##
## External database configuration
##
externalDatabase:
    enabled: true
    type: postgresql
    ## Database host. You can optionally include a colon delimited port like "myhost:1234"
    host: ENC[AES256_GCM,data:RMnIy0Idh1ImR/YqCRXprRpr2Po=,iv:dVhdTsqWZDB28tWGGMK1xJ8YWSIuB/NjAbNstQB3opE=,tag:KY9hL99Af2+iNvmYmME2NQ==,type:str]
    user: admin
    password: ENC[AES256_GCM,data:SE1RMfJx/IypUcAjM9h1,iv:jleAY1o4wksy8VGM9KGnSyQdEpGj3dxzllENvVpiiUM=,tag:OxPu1soijQcuu5tx6XtQHQ==,type:str]
    database: nextcloud
    existingSecret:
        enabled: false
##
## PostgreSQL chart configuration
## for more options see https://github.com/bitnami/charts/tree/main/bitnami/postgresql
##
postgresql:
    enabled: true
    global:
        postgresql:
            # global.postgresql.auth overrides postgresql.auth
            auth:
                username: admin
                password: ENC[AES256_GCM,data:NBOj1aMKdRPVrqD6bjbH,iv:VZYRm5R/d3tfeF6HFSJkQP/ot/jlMU+B7Si7ofuB4CQ=,tag:fN06KcDrK5zkolYfyOSB1A==,type:str]
                database: nextcloud
                # Name of existing secret to use for PostgreSQL credentials.
                # auth.postgresPassword, auth.password, and auth.replicationPassword will be ignored and picked up from this secret.
                # secret might also contains the key ldap-password if LDAP is enabled.
                # ldap.bind_password will be ignored and picked from this secret in this case.
                existingSecret: ""
                # Names of keys in existing secret to use for PostgreSQL credentials
                secretKeys:
                    adminPasswordKey: ""
                    userPasswordKey: ""
                    replicationPasswordKey: ""
    primary:
        persistence:
            enabled: true
            existingClaim: postgres-nextcloud-pvc
        podSecurityContext:
            fsGroup: 1001
## Cronjob to execute Nextcloud background tasks
## ref: https://docs.nextcloud.com/server/latest/admin_manual/configuration_server/background_jobs_configuration.html#cron
##
cronjob:
    enabled: false
    ## Cronjob sidecar resource requests and limits
    ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
    ##
    resources: {}
    # Allow configuration of lifecycle hooks
    # ref: https://kubernetes.io/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/
    lifecycle: {}
    # postStartCommand: []
    # preStopCommand: []
    # Set securityContext parameters. For example, you may need to define runAsNonRoot directive
    securityContext: {}
    #   runAsUser: 33
    #   runAsGroup: 33
    #   runAsNonRoot: true
    #   readOnlyRootFilesystem: true
    # The command the cronjob container executes.
    command:
        - /cron.sh
## Liveness and readiness probe values
## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
##
livenessProbe:
    enabled: true
    initialDelaySeconds: 240
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
readinessProbe:
    enabled: true
    initialDelaySeconds: 240
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
startupProbe:
    enabled: false
    initialDelaySeconds: 240
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30
    successThreshold: 1
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age:
        - recipient: age1h5cpazy9s7j7cmzpxjw4sxst9nk4y0lfyk62l2m4tluvkg5dk9yqw4xalx
          enc: |
            -----BEGIN AGE ENCRYPTED FILE-----
            YWdlLWVuY3J5cHRpb24ub3JnL3YxCi0+IFgyNTUxOSBveThybGl2VHBwcGs5NXJG
            RWZDWGt4L1gwSkw5akl3dzJIZkcvczlDd3pvCkxvUVlmeG92dFhhbFVIaFAxVXA3
            U0VENC93RlBNVmtBdjdja1BZUVA5RXcKLS0tIG9qeDczanRWVlU5anFmaDF3K2xX
            VGVVbi93dVdYNldDaktLbFVreFhKem8KvxgjrmcHMaWY/fUOkM73QukHYLj4lV8G
            2+EordVvf3TWuWVsMA0Hrt81RTJIUTDGuvblc0llly78G3lj8gipzw==
            -----END AGE ENCRYPTED FILE-----
    lastmodified: "2025-07-10T19:31:27Z"
    mac: ENC[AES256_GCM,data:sdlAhhTUP1TYcAWkii6w2xPd+8P7bHgLFfZEaAiqcd8HSqmzHv0AWQ+o2bL+F2s5zHBiOkiY97AK4aQBn+gP3++xx8pg4hZ7KFvigJACPGBnBBux3CBt9wLmxlp/2TFvFQrTb+lXPW0NKvuJkRPlMPQmSFqTVCxd68emXeDfmT0=,iv:nMm7D0KrHsDR7Al2gu7UeAFAB4l1BzFWXfAamTpNMh0=,tag:5A/yuq+pYh1mdWC5ZTwCUg==,type:str]
    pgp: []
    encrypted_regex: ^(domain|API_KEY|AUTH_KEY|password|secret|token|key|trustedDomains|name|host|accessKey|secretKey)$
    version: 3.8.1
