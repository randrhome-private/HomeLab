# Default values for Jellyfin.
# This is a YAML-formatted file.

# -- Number of Jellyfin replicas to start. Should be left at 1.
replicaCount: 1

image:
  # -- Container image repository for Jellyfin.
  repository: docker.io/jellyfin/jellyfin
  # -- Jellyfin container image tag. Leave empty to automatically use the Chart's app version.
  tag: ""
  # -- Image pull policy (Always, IfNotPresent, or Never).
  pullPolicy: IfNotPresent

# -- Override the default name of the chart.
nameOverride: ""
# -- Override the default full name of the chart.
fullnameOverride: ""

# -- Service account configuration. See: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # -- Specifies whether to create a service account.
  create: true
  # -- Automatically mount API credentials for the service account.
  automount: true
  # -- Annotations for the service account.
  annotations: {}
  # -- Custom name for the service account. If left empty, the name will be autogenerated.
  name: ""

# -- Annotations to add to the pod.
podAnnotations: {}
# -- Additional labels to add to the pod.
podLabels: {}

# -- Security context for the pod.
podSecurityContext: {}
  # fsGroup: 2000

# -- Security context for the container.
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# -- Define a custom runtimeClassName for the pod.
runtimeClassName: ''

# -- Define a priorityClassName for the pod.
priorityClassName: ""

# -- Deployment strategy configuration. See `kubectl explain deployment.spec.strategy`.
deploymentStrategy:
  type: RollingUpdate

# -- Annotations to add to the deployment.
deploymentAnnotations: {}

service:
  # # -- Custom name for the service port
  # name: http
  # -- Service type (ClusterIP, NodePort, or LoadBalancer).
  type: ClusterIP
  # -- Configure dual-stack IP family policy. See: https://kubernetes.io/docs/concepts/services-networking/dual-stack/
  ipFamilyPolicy: ""
  # -- Supported IP families (IPv4, IPv6).
  ipFamilies: []
  # -- Specific IP address for the LoadBalancer.
  loadBalancerIP: ""
  # -- Class of the LoadBalancer.
  loadBalancerClass: ""
  # -- Source ranges allowed to access the LoadBalancer.
  loadBalancerSourceRanges: []
  # -- Port for the Jellyfin service.
  port: 8096
  # -- Name of the port in the service.
  portName: service
  # -- Annotations for the service.
  annotations: {}
  # -- Labels for the service.
  labels: {}
  # -- External traffic policy (Cluster or Local).
  # externalTrafficPolicy: Cluster
  # -- NodePort for the service (if applicable).
  # nodePort: 


# -- Configure liveness probe for Jellyfin.
livenessProbe:
  initialDelaySeconds: 10
  tcpSocket:
    port: http
  # successThreshold: 1
  # failureThreshold: 3
  # timeoutSeconds: 1
  # periodSeconds: 10

# -- Configure readiness probe for Jellyfin.
readinessProbe:
  initialDelaySeconds: 10
  tcpSocket:
    port: http
  # successThreshold: 1
  # failureThreshold: 3
  # timeoutSeconds: 1
  # periodSeconds: 10


persistence:
  config:
    enabled: true
    accessMode: ReadWriteOnce
    size: 5Gi
    storageClass: ''
    existingClaim: 'jellyfin-config-pvc'
  media:
    enabled: true
    type: pvc
    accessMode: ReadWriteOnce
    size: 4000Gi
    storageClass: ''
    existingClaim: 'jellyfin-media-pvc'
